{"ast":null,"code":"import { Application } from '../model/application.model';\nimport { Technology } from '../model/technology.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/application/application.service\";\nimport * as i2 from \"../service/technology/technology.service\";\nimport * as i3 from \"../table/table.component\";\nexport class IndexComponent {\n  constructor(applicationService, technologyService) {\n    this.applicationService = applicationService;\n    this.technologyService = technologyService;\n    this.title = \"Application management system\";\n    this.applications = [];\n    this.technologies = [];\n  }\n  ngOnInit() {\n    this.getAllApplications();\n    this.getAllTechnologies();\n  }\n  handleActionEvent(event) {\n    console.log(event);\n  }\n  getAllApplications() {\n    this.applicationService.getAllApplications().subscribe(response => {\n      if (response.status === 200 && response?.body?.data) {\n        for (let a of response.body.data) {\n          const tech = a?.technology;\n          let technology = null;\n          if (tech) {\n            technology = Technology.toModel(tech);\n          }\n          const application = Application.toModel(a, technology);\n          this.applications.push(application);\n        }\n      }\n    });\n  }\n  getAllTechnologies() {\n    this.technologyService.getAllTechnologies().subscribe(response => {\n      if (response.status === 200 && response?.body?.data) {\n        for (let t of response.body.data) {\n          const technology = Technology.toModel(t);\n          this.technologies.push(technology);\n          console.log(technology);\n        }\n      }\n    });\n  }\n}\nIndexComponent.ɵfac = function IndexComponent_Factory(t) {\n  return new (t || IndexComponent)(i0.ɵɵdirectiveInject(i1.ApplicationService), i0.ɵɵdirectiveInject(i2.TechnologyService));\n};\nIndexComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: IndexComponent,\n  selectors: [[\"app-index\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"w-fill\", \"h-full\", \"p-3\"], [1, \"d-flex\"], [1, \"bi\", \"bi-plus-square-fill\", \"fa-5x\"], [3, \"applications\", \"actionEmitter\"]],\n  template: function IndexComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"i\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"app-table\", 3);\n      i0.ɵɵlistener(\"actionEmitter\", function IndexComponent_Template_app_table_actionEmitter_5_listener($event) {\n        return ctx.handleActionEvent($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"applications\", ctx.applications);\n    }\n  },\n  dependencies: [i3.TableComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,4BAA4B;AACxD,SAASC,UAAU,QAAQ,2BAA2B;;;;;AAQtD,OAAM,MAAOC,cAAc;EAMzBC,YAAoBC,kBAAsC,EAAUC,iBAAoC;IAApF,uBAAkB,GAAlBD,kBAAkB;IAA8B,sBAAiB,GAAjBC,iBAAiB;IALrF,UAAK,GAAG,+BAA+B;IACvC,iBAAY,GAAuB,EAAE;IACrC,iBAAY,GAAsB,EAAE;EAGuE;EAE3GC,QAAQ;IACN,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAC,iBAAiB,CAACC,KAAU;IAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;EAEQH,kBAAkB;IACxB,IAAI,CAACH,kBAAkB,CAACG,kBAAkB,EAAE,CAACM,SAAS,CAAEC,QAAa,IAAI;MACvE,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,IAAID,QAAQ,EAAEE,IAAI,EAAEC,IAAI,EAAE;QACnD,KAAK,IAAIC,CAAC,IAAIJ,QAAQ,CAACE,IAAI,CAACC,IAAI,EAAE;UAChC,MAAME,IAAI,GAAGD,CAAC,EAAEE,UAAU;UAC1B,IAAIA,UAAU,GAAG,IAAI;UACrB,IAAID,IAAI,EAAE;YACRC,UAAU,GAAGnB,UAAU,CAACoB,OAAO,CAACF,IAAI,CAAC;;UAEvC,MAAMG,WAAW,GAAgBtB,WAAW,CAACqB,OAAO,CAACH,CAAC,EAAEE,UAAU,CAAC;UAEnE,IAAI,CAACG,YAAY,CAACC,IAAI,CAACF,WAAW,CAAC;;;IAGzC,CAAC,CAAC;EACJ;EAEQd,kBAAkB;IACxB,IAAI,CAACH,iBAAiB,CAACG,kBAAkB,EAAE,CAACK,SAAS,CAAEC,QAAa,IAAI;MACtE,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,IAAID,QAAQ,EAAEE,IAAI,EAAEC,IAAI,EAAE;QACnD,KAAK,IAAIQ,CAAC,IAAIX,QAAQ,CAACE,IAAI,CAACC,IAAI,EAAE;UAChC,MAAMG,UAAU,GAAGnB,UAAU,CAACoB,OAAO,CAACI,CAAC,CAAC;UACxC,IAAI,CAACC,YAAY,CAACF,IAAI,CAACJ,UAAU,CAAC;UAClCT,OAAO,CAACC,GAAG,CAACQ,UAAU,CAAC;;;IAG7B,CAAC,CAAC;EACJ;;AA5CWlB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BC,8BAA+B;MAEvBA,YAAS;MAAAA,iBAAK;MAClBA,uBAA4C;MAC9CA,iBAAM;MACNA,oCAAqF;MAA5CA;QAAA,OAAiBC,6BAAyB;MAAA,EAAC;MAACD,iBAAY;;;MAH3FA,eAAS;MAATA,+BAAS;MAGJA,eAA6B;MAA7BA,+CAA6B","names":["Application","Technology","IndexComponent","constructor","applicationService","technologyService","ngOnInit","getAllApplications","getAllTechnologies","handleActionEvent","event","console","log","subscribe","response","status","body","data","a","tech","technology","toModel","application","applications","push","t","technologies","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/marchel0925/development/VSCodeProjects/autentica-practical-frontend/src/app/index/index.component.ts","/Users/marchel0925/development/VSCodeProjects/autentica-practical-frontend/src/app/index/index.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApplicationService } from '../service/application/application.service';\nimport { Application } from '../model/application.model';\nimport { Technology } from '../model/technology.model';\nimport { TechnologyService } from '../service/technology/technology.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n  title = \"Application management system\";\n  applications: Array<Application> = [];\n  technologies: Array<Technology> = [];\n  show\n\n  constructor(private applicationService: ApplicationService, private technologyService: TechnologyService) {}\n\n  ngOnInit(): void {\n    this.getAllApplications();\n    this.getAllTechnologies();\n  }\n\n  handleActionEvent(event: any) {\n    console.log(event);\n  }\n\n  private getAllApplications() {\n    this.applicationService.getAllApplications().subscribe((response: any) => {\n      if (response.status === 200 && response?.body?.data) {\n        for (let a of response.body.data) {\n          const tech = a?.technology;\n          let technology = null;\n          if (tech) {\n            technology = Technology.toModel(tech);\n          }\n          const application: Application = Application.toModel(a, technology);\n\n          this.applications.push(application);\n        }\n      }\n    });\n  }\n\n  private getAllTechnologies() {\n    this.technologyService.getAllTechnologies().subscribe((response: any) => {\n      if (response.status === 200 && response?.body?.data) {\n        for (let t of response.body.data) {\n          const technology = Technology.toModel(t);\n          this.technologies.push(technology);\n          console.log(technology);\n        }\n      }\n    });\n  }\n}\n","<div class=\"w-fill h-full p-3\">\n  <div class=\"d-flex\">\n    <h1>{{title}}</h1>\n    <i class=\"bi bi-plus-square-fill fa-5x\"></i>\n  </div>\n  <app-table [applications]=\"applications\" (actionEmitter)=\"handleActionEvent($event)\"></app-table>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}