{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport { TechnologyType } from '../constants/technology-type';\nlet FormComponent = class FormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.application = null;\n    this.technologies = [];\n    this.applicationForm = this.fb.group({\n      description: [\"\", Validators.maxLength(300)],\n      email: [\"\", [Validators.required, Validators.email]],\n      neededTill: [formatDate(new Date(), \"yyyy-MM-dd HH:mm\", \"en\"), Validators.required],\n      newTechnology: [false],\n      technology: this.fb.group({\n        type: [\"\"],\n        ram: [4],\n        cores: [1],\n        motherboard: [\"\"],\n        gpu: [\"\"]\n      })\n    });\n    this.technologyIdSelected = -1;\n  }\n  ngOnInit() {\n    // This means that we are editing an application\n    if (this.application) {\n      this.applicationForm.patchValue({\n        description: this.application.description,\n        email: this.application.email,\n        neededTill: formatDate(new Date(this.application.neededTill), \"yyyy-MM-dd HH:mm\", \"en\"),\n        newTechnology: this.application.technology ? true : false,\n        technology: {\n          type: this.application.technology?.type,\n          ram: this.application.technology?.ram,\n          cores: this.application.technology?.cores,\n          motherboard: this.application.technology?.motherboard,\n          gpu: this.application.technology?.gpu\n        }\n      });\n    }\n  }\n  get controls() {\n    return this.applicationForm.controls;\n  }\n  get technologyTypes() {\n    return [TechnologyType.Desktop, TechnologyType.Laptop, TechnologyType.Tablet, TechnologyType.Phone];\n  }\n  onCheckboxChange(event) {\n    this.controls.newTechnology.setValue(event.target.checked);\n  }\n  onTechnologyClicked(id) {\n    if (this.technologyIdSelected != id) {\n      this.technologyIdSelected = id;\n    }\n  }\n};\n__decorate([Input(\"application\")], FormComponent.prototype, \"application\", void 0);\n__decorate([Input(\"technologies\")], FormComponent.prototype, \"technologies\", void 0);\nFormComponent = __decorate([Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})], FormComponent);\nexport { FormComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","Validators","formatDate","TechnologyType","FormComponent","constructor","fb","group","description","maxLength","email","required","neededTill","Date","newTechnology","technology","type","ram","cores","motherboard","gpu","ngOnInit","application","applicationForm","patchValue","controls","technologyTypes","Desktop","Laptop","Tablet","Phone","onCheckboxChange","event","setValue","target","checked","onTechnologyClicked","id","technologyIdSelected","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/marchel0925/development/VSCodeProjects/autentica-practical-frontend/src/app/form/form.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Application } from '../model/application.model';\nimport { Technology } from '../model/technology.model';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport { TechnologyType } from '../constants/technology-type';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  @Input(\"application\") application: Application | null = null;\n  @Input(\"technologies\") technologies: Array<Technology> = [];\n  applicationForm = this.fb.group({\n    description: [\"\", Validators.maxLength(300)],\n    email: [\"\", [Validators.required, Validators.email]],\n    neededTill: [formatDate(new Date(), \"yyyy-MM-dd HH:mm\", \"en\"), Validators.required],\n    newTechnology: [false],\n    technology: this.fb.group({\n      type: [\"\"],\n      ram: [4],\n      cores: [1],\n      motherboard: [\"\"],\n      gpu: [\"\"],\n    }),\n  });\n\n  technologyIdSelected = -1;\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    // This means that we are editing an application\n    if (this.application) {\n      this.applicationForm.patchValue({\n        description: this.application.description,\n        email: this.application.email,\n        neededTill: formatDate(new Date(this.application.neededTill), \"yyyy-MM-dd HH:mm\", \"en\"),\n        newTechnology: this.application.technology ? true : false,\n        technology: {\n          type: this.application.technology?.type,\n          ram: this.application.technology?.ram,\n          cores: this.application.technology?.cores,\n          motherboard: this.application.technology?.motherboard,\n          gpu: this.application.technology?.gpu,\n        }\n      });\n    }\n  }\n\n  get controls() {\n    return this.applicationForm.controls;\n  }\n\n  get technologyTypes() {\n    return [\n      TechnologyType.Desktop,\n      TechnologyType.Laptop,\n      TechnologyType.Tablet,\n      TechnologyType.Phone,\n    ];\n  }\n\n  onCheckboxChange(event: any) {\n    this.controls.newTechnology.setValue(event.target.checked);\n  }\n\n  onTechnologyClicked(id: number) {\n    if (this.technologyIdSelected != id) {\n      this.technologyIdSelected = id;\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}