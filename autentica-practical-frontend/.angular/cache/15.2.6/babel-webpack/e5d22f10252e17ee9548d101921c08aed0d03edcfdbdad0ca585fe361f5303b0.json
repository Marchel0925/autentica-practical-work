{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/technology/technology.service\";\nimport * as i3 from \"@angular/common\";\nfunction FormComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email can't be empty. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Input a valid email. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, FormComponent_div_14_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵtemplate(2, FormComponent_div_14_div_2_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.controls.email == null ? null : ctx_r0.controls.email.errors == null ? null : ctx_r0.controls.email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.controls.email == null ? null : ctx_r0.controls.email.errors == null ? null : ctx_r0.controls.email.errors[\"email\"]);\n  }\n}\nfunction FormComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Input a valid date. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, FormComponent_div_19_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.controls.neededTill == null ? null : ctx_r1.controls.neededTill.errors == null ? null : ctx_r1.controls.neededTill.errors[\"required\"]);\n  }\n}\nfunction FormComponent_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r15 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", type_r15)(\"selected\", ctx_r2.controls.technology.value.type == type_r15);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r15);\n  }\n}\nfunction FormComponent_div_26_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Type is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, FormComponent_div_26_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.techControls.type == null ? null : ctx_r3.techControls.type.errors == null ? null : ctx_r3.techControls.type.errors[\"required\"]);\n  }\n}\nfunction FormComponent_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const r_r17 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", r_r17)(\"selected\", ctx_r4.controls.technology.value.ram == r_r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(r_r17);\n  }\n}\nfunction FormComponent_div_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" RAM is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, FormComponent_div_32_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.techControls.ram == null ? null : ctx_r5.techControls.ram.errors == null ? null : ctx_r5.techControls.ram.errors[\"required\"]);\n  }\n}\nfunction FormComponent_option_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r19 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", c_r19)(\"selected\", ctx_r6.controls.technology.value.cores == c_r19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(c_r19);\n  }\n}\nfunction FormComponent_div_38_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Cores is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, FormComponent_div_38_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.techControls.cores == null ? null : ctx_r7.techControls.cores.errors == null ? null : ctx_r7.techControls.cores.errors[\"required\"]);\n  }\n}\nfunction FormComponent_option_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mb_r21 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", mb_r21)(\"selected\", ctx_r8.controls.technology.value.motherboard == mb_r21);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(mb_r21);\n  }\n}\nfunction FormComponent_div_44_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Motherboard is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, FormComponent_div_44_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.techControls.motherboard == null ? null : ctx_r9.techControls.motherboard.errors == null ? null : ctx_r9.techControls.motherboard.errors[\"required\"]);\n  }\n}\nfunction FormComponent_option_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const gpu_r23 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", gpu_r23)(\"selected\", ctx_r10.controls.technology.value.gpu == gpu_r23);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(gpu_r23);\n  }\n}\nfunction FormComponent_div_50_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" GPU is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, FormComponent_div_50_div_1_Template, 2, 0, \"div\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.techControls.gpu == null ? null : ctx_r11.techControls.gpu.errors == null ? null : ctx_r11.techControls.gpu.errors[\"required\"]);\n  }\n}\nexport class FormComponent {\n  constructor(fb, technologyService) {\n    this.fb = fb;\n    this.technologyService = technologyService;\n    this.eventEmitter = new EventEmitter();\n    this.applicationForm = this.fb.group({\n      description: [\"\", Validators.maxLength(300)],\n      email: [\"\", [Validators.required, Validators.email]],\n      neededTill: [formatDate(new Date(), \"yyyy-MM-dd HH:mm\", \"en\"), Validators.required],\n      technology: this.fb.group({\n        type: [\"\", Validators.required],\n        ram: [4, Validators.required],\n        cores: [1, Validators.required],\n        motherboard: [\"\", Validators.required],\n        gpu: [\"\", Validators.required]\n      })\n    });\n    this.motherboards = [];\n    this.gpus = [];\n  }\n  ngOnInit() {\n    this.motherboards = this.technologyService.technologyMotherboards(this.technologyTypes[0]);\n    this.gpus = this.technologyService.technologyGPU(this.technologyTypes[0]);\n    this.applicationForm.patchValue({\n      technology: {\n        type: this.technologyTypes[0],\n        motherboard: this.motherboards[0],\n        gpu: this.gpus[0]\n      }\n    });\n  }\n  get controls() {\n    return this.applicationForm.controls;\n  }\n  get techControls() {\n    return this.controls.technology.controls;\n  }\n  get technologyTypes() {\n    return this.technologyService.technologyTypes;\n  }\n  get technologyRAM() {\n    return this.technologyService.technologyRAM;\n  }\n  get technologyCores() {\n    return this.technologyService.technologyCores;\n  }\n  onTypeChange(event) {\n    this.motherboards = this.technologyService.technologyMotherboards(event.target.value);\n    this.gpus = this.technologyService.technologyGPU(event.target.value);\n  }\n  onSubmit() {\n    if (this.applicationForm.valid) {\n      const newApplication = this.applicationForm.value;\n      newApplication.id = 0;\n      newApplication.created = new Date().getTime();\n      newApplication.status = \"sent\";\n      newApplication.technology.id = 0;\n      newApplication.neededTill = new Date(newApplication.neededTill).getTime();\n      this.emitEvent(newApplication);\n    }\n  }\n  emitEvent(app) {\n    this.applicationForm.reset();\n    this.eventEmitter.emit(app);\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TechnologyService));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  outputs: {\n    eventEmitter: \"eventEmitter\"\n  },\n  decls: 56,\n  vars: 15,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"description\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"aria-describedby\", \"help\", \"maxlength\", \"300\", 1, \"form-control\"], [\"id\", \"help\", 1, \"form-text\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"something@mail.com\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"neededTill\", 1, \"form-label\"], [\"type\", \"datetime-local\", \"id\", \"neededTill\", \"formControlName\", \"neededTill\", 1, \"form-control\"], [1, \"mt-2\", 3, \"formGroup\"], [\"for\", \"techType\", 1, \"form-label\"], [\"id\", \"techType\", \"formControlName\", \"type\", 1, \"form-select\", 3, \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"techRAM\", 1, \"form-label\"], [\"id\", \"techRAM\", 1, \"form-select\"], [\"for\", \"techCores\", 1, \"form-label\"], [\"id\", \"techCores\", 1, \"form-select\"], [\"for\", \"techMotherboard\", 1, \"form-label\"], [\"id\", \"techMotherboard\", 1, \"form-select\"], [\"for\", \"techGPU\", 1, \"form-label\"], [\"id\", \"techGPU\", 1, \"form-select\"], [1, \"d-flex\", \"justify-content-around\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"my-4\", 3, \"disabled\"], [1, \"btn\", \"btn-outline-danger\", \"my-4\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"], [3, \"value\", \"selected\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n      i0.ɵɵtext(2, \"Apply\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"textarea\", 3);\n      i0.ɵɵelementStart(8, \"div\", 4);\n      i0.ɵɵtext(9, \"Why do you need this? No more than 300 characters.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵtemplate(14, FormComponent_div_14_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Needed till:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵtemplate(19, FormComponent_div_19_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 10)(21, \"div\", 1)(22, \"label\", 11);\n      i0.ɵɵtext(23, \"Type:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"select\", 12);\n      i0.ɵɵlistener(\"change\", function FormComponent_Template_select_change_24_listener($event) {\n        return ctx.onTypeChange($event);\n      });\n      i0.ɵɵtemplate(25, FormComponent_option_25_Template, 2, 3, \"option\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, FormComponent_div_26_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 1)(28, \"label\", 14);\n      i0.ɵɵtext(29, \"RAM (GB):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"select\", 15);\n      i0.ɵɵtemplate(31, FormComponent_option_31_Template, 2, 3, \"option\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(32, FormComponent_div_32_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"div\", 1)(34, \"label\", 16);\n      i0.ɵɵtext(35, \"Cores:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"select\", 17);\n      i0.ɵɵtemplate(37, FormComponent_option_37_Template, 2, 3, \"option\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(38, FormComponent_div_38_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 1)(40, \"label\", 18);\n      i0.ɵɵtext(41, \"Motherboard:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"select\", 19);\n      i0.ɵɵtemplate(43, FormComponent_option_43_Template, 2, 3, \"option\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(44, FormComponent_div_44_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 1)(46, \"label\", 20);\n      i0.ɵɵtext(47, \"GPU:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"select\", 21);\n      i0.ɵɵtemplate(49, FormComponent_option_49_Template, 2, 3, \"option\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(50, FormComponent_div_50_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"div\", 22)(52, \"button\", 23);\n      i0.ɵɵtext(53, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function FormComponent_Template_button_click_54_listener() {\n        return ctx.emitEvent(null);\n      });\n      i0.ɵɵtext(55, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.applicationForm);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", (ctx.controls.email == null ? null : ctx.controls.email.invalid) && ((ctx.controls.email == null ? null : ctx.controls.email.touched) || (ctx.controls.email == null ? null : ctx.controls.email.dirty)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.controls.neededTill == null ? null : ctx.controls.neededTill.invalid) && ((ctx.controls.neededTill == null ? null : ctx.controls.neededTill.touched) || (ctx.controls.neededTill == null ? null : ctx.controls.neededTill.dirty)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.te);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.technologyTypes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.techControls.type == null ? null : ctx.techControls.type.invalid) && ((ctx.techControls.type == null ? null : ctx.techControls.type.touched) || (ctx.techControls.type == null ? null : ctx.techControls.type.dirty)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.technologyRAM);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.techControls.ram == null ? null : ctx.techControls.ram.invalid) && ((ctx.techControls.ram == null ? null : ctx.techControls.ram.touched) || (ctx.techControls.ram == null ? null : ctx.techControls.ram.dirty)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.technologyCores);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.techControls.cores == null ? null : ctx.techControls.cores.invalid) && ((ctx.techControls.cores == null ? null : ctx.techControls.cores.touched) || (ctx.techControls.cores == null ? null : ctx.techControls.cores.dirty)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.motherboards);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.techControls.motherboard == null ? null : ctx.techControls.motherboard.invalid) && ((ctx.techControls.motherboard == null ? null : ctx.techControls.motherboard.touched) || (ctx.techControls.motherboard == null ? null : ctx.techControls.motherboard.dirty)));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.gpus);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.techControls.gpu == null ? null : ctx.techControls.gpu.invalid) && ((ctx.techControls.gpu == null ? null : ctx.techControls.gpu.touched) || (ctx.techControls.gpu == null ? null : ctx.techControls.gpu.dirty)));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.applicationForm.valid);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","formatDate","i0","FormComponent","constructor","fb","technologyService","group","description","maxLength","email","required","neededTill","Date","technology","type","ram","cores","motherboard","gpu","ngOnInit","motherboards","technologyMotherboards","technologyTypes","gpus","technologyGPU","applicationForm","patchValue","controls","techControls","technologyRAM","technologyCores","onTypeChange","event","target","value","onSubmit","valid","newApplication","id","created","getTime","status","emitEvent","app","reset","eventEmitter","emit","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/marchel0925/development/VSCodeProjects/autentica-practical-frontend/src/app/form/form.component.ts","/Users/marchel0925/development/VSCodeProjects/autentica-practical-frontend/src/app/form/form.component.html"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport { TechnologyService } from '../service/technology/technology.service';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  @Output() eventEmitter = new EventEmitter<any>();\n  applicationForm = this.fb.group({\n    description: [\"\", Validators.maxLength(300)],\n    email: [\"\", [Validators.required, Validators.email]],\n    neededTill: [formatDate(new Date(), \"yyyy-MM-dd HH:mm\", \"en\"), Validators.required],\n    technology: this.fb.group({\n      type: [\"\", Validators.required],\n      ram: [4, Validators.required],\n      cores: [1, Validators.required],\n      motherboard: [\"\", Validators.required],\n      gpu: [\"\", Validators.required],\n    }),\n  });\n\n  motherboards : Array<string> = [];\n  gpus : Array<string> = [];\n\n  constructor(private fb: FormBuilder, private technologyService: TechnologyService) {}\n\n  ngOnInit(): void {\n    this.motherboards = this.technologyService.technologyMotherboards(this.technologyTypes[0]);\n    this.gpus = this.technologyService.technologyGPU(this.technologyTypes[0]);\n    this.applicationForm.patchValue({\n      technology: {\n        type: this.technologyTypes[0],\n        motherboard: this.motherboards[0],\n        gpu: this.gpus[0],\n      }\n    });\n  }\n\n  get controls() {return this.applicationForm.controls;}\n  get techControls() {return this.controls.technology.controls;}\n\n  get technologyTypes() { return this.technologyService.technologyTypes;}\n  get technologyRAM() { return this.technologyService.technologyRAM;}\n  get technologyCores() { return this.technologyService.technologyCores;}\n\n  onTypeChange(event: any) {\n    this.motherboards = this.technologyService.technologyMotherboards(event.target.value)\n    this.gpus = this.technologyService.technologyGPU(event.target.value)\n  }\n\n  onSubmit() {\n    if (this.applicationForm.valid) {\n      const newApplication : any = this.applicationForm.value;\n      newApplication.id = 0;\n      newApplication.created = new Date().getTime();\n      newApplication.status = \"sent\";\n      newApplication.technology.id = 0;\n      newApplication.neededTill = new Date(newApplication.neededTill).getTime();\n      this.emitEvent(newApplication);\n    }\n  }\n\n  emitEvent(app: any | null) {\n    this.applicationForm.reset();\n    this.eventEmitter.emit(app);\n  }\n}\n","<div>\n  <h3>Apply</h3>\n  <form [formGroup]=\"applicationForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label class=\"form-label\" for=\"description\">Description:</label>\n      <textarea\n        type=\"text\"\n        class=\"form-control\"\n        id=\"description\"\n        formControlName=\"description\"\n        aria-describedby=\"help\"\n        maxlength=\"300\"\n      ></textarea>\n      <div id=\"help\" class=\"form-text\">Why do you need this? No more than 300 characters.</div>\n    </div>\n\n    <div class=\"form-group\">\n      <label class=\"form-label\" for=\"email\">Email:</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"email\"\n        formControlName=\"email\"\n        placeholder=\"something@mail.com\"\n      />\n\n      <div\n        class=\"alert alert-danger\"\n        *ngIf=\"controls.email?.invalid && (controls.email?.touched || controls.email?.dirty)\"\n      >\n        <div *ngIf=\"controls.email?.errors?.['required']\">\n          Email can't be empty.\n        </div>\n        <div *ngIf=\"controls.email?.errors?.['email']\">\n          Input a valid email.\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label class=\"form-label\" for=\"neededTill\">Needed till:</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control\"\n        id=\"neededTill\"\n        formControlName=\"neededTill\"\n      />\n      <div\n        class=\"alert alert-danger\"\n        *ngIf=\"controls.neededTill?.invalid && (controls.neededTill?.touched || controls.neededTill?.dirty)\"\n      >\n        <div *ngIf=\"controls.neededTill?.errors?.['required']\">\n          Input a valid date.\n        </div>\n      </div>\n    </div>\n\n    <div class=\"mt-2\" [formGroup]=\"te\">\n      <div class=\"form-group\">\n        <label class=\"form-label\" for=\"techType\">Type:</label>\n        <select class=\"form-select\" id=\"techType\" formControlName=\"type\" (change)=\"onTypeChange($event)\">\n          <option\n            *ngFor=\"let type of technologyTypes\"\n            [value]=\"type\"\n            [selected]=\"controls.technology.value.type == type\"\n          >{{type}}</option>\n        </select>\n\n        <div\n          class=\"alert alert-danger\"\n          *ngIf=\"techControls.type?.invalid && (techControls.type?.touched || techControls.type?.dirty)\"\n        >\n          <div *ngIf=\"techControls.type?.errors?.['required']\">\n            Type is required.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"form-label\" for=\"techRAM\">RAM (GB):</label>\n        <select class=\"form-select\" id=\"techRAM\">\n          <option\n            *ngFor=\"let r of technologyRAM\"\n            [value]=\"r\"\n            [selected]=\"controls.technology.value.ram == r\"\n          >{{r}}</option>\n        </select>\n\n        <div\n          class=\"alert alert-danger\"\n          *ngIf=\"techControls.ram?.invalid && (techControls.ram?.touched || techControls.ram?.dirty)\"\n        >\n          <div *ngIf=\"techControls.ram?.errors?.['required']\">\n            RAM is required.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"form-label\" for=\"techCores\">Cores:</label>\n        <select class=\"form-select\" id=\"techCores\">\n          <option\n            *ngFor=\"let c of technologyCores\"\n            [value]=\"c\"\n            [selected]=\"controls.technology.value.cores == c\"\n          >{{c}}</option>\n        </select>\n\n        <div\n          class=\"alert alert-danger\"\n          *ngIf=\"techControls.cores?.invalid && (techControls.cores?.touched || techControls.cores?.dirty)\"\n        >\n          <div *ngIf=\"techControls.cores?.errors?.['required']\">\n            Cores is required.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"form-label\" for=\"techMotherboard\">Motherboard:</label>\n        <select class=\"form-select\" id=\"techMotherboard\">\n          <option\n            *ngFor=\"let mb of motherboards\"\n            [value]=\"mb\"\n            [selected]=\"controls.technology.value.motherboard == mb\"\n          >{{mb}}</option>\n        </select>\n\n        <div\n          class=\"alert alert-danger\"\n          *ngIf=\"techControls.motherboard?.invalid && (techControls.motherboard?.touched || techControls.motherboard?.dirty)\"\n        >\n          <div *ngIf=\"techControls.motherboard?.errors?.['required']\">\n            Motherboard is required.\n          </div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label class=\"form-label\" for=\"techGPU\">GPU:</label>\n        <select class=\"form-select\" id=\"techGPU\">\n          <option\n            *ngFor=\"let gpu of gpus\"\n            [value]=\"gpu\"\n            [selected]=\"controls.technology.value.gpu == gpu\"\n          >{{gpu}}</option>\n        </select>\n\n        <div\n          class=\"alert alert-danger\"\n          *ngIf=\"techControls.gpu?.invalid && (techControls.gpu?.touched || techControls.gpu?.dirty)\"\n        >\n          <div *ngIf=\"techControls.gpu?.errors?.['required']\">\n            GPU is required.\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"d-flex justify-content-around\">\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary my-4\"\n        [disabled]=\"!applicationForm.valid\"\n      >Submit</button>\n      <button\n        class=\"btn btn-outline-danger my-4\"\n        (click)=\"emitEvent(null)\"\n      >Cancel</button>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}