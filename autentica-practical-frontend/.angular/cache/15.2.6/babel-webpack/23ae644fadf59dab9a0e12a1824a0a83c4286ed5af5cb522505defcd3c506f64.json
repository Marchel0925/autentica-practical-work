{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TechnologyService {\n  constructor() {}\n  get technologyTypes() {\n    return ['desktop', 'laptop', 'tablet', 'phone'];\n  }\n  get technologyRAM() {\n    return [2, 4, 8, 16, 32, 64, 128];\n  }\n  get technologyCores() {\n    return [1, 2, 4, 6, 8, 16, 32, 64, 128];\n  }\n  technologyMotherboards(type) {\n    switch (type) {\n      case 'desktop':\n        return ['motherboard_desktop_1', 'motherboard_desktop_2', 'motherboard_desktop_3'];\n      case 'laptop':\n        return ['motherboard_laptop_1', 'motherboard_laptop_2', 'motherboard_laptop_3'];\n      case 'tablet':\n        return ['motherboard_tablet_1', 'motherboard_tablet_2', 'motherboard_tablet_3'];\n      case 'phone':\n        return ['motherboard_phone_1', 'motherboard_phone_2', 'motherboard_phone_3'];\n      default:\n        return [];\n    }\n  }\n  technologyGPU(type) {\n    switch (type) {\n      case 'desktop':\n        return ['gpu_desktop_1', 'gpu_desktop_2', 'gpu_desktop_3'];\n      case 'laptop':\n        return ['gpu_laptop_1', 'gpu_laptop_2', 'gpu_laptop_3'];\n      case 'tablet':\n        return ['gpu_tablet_1', 'gpu_tablet_2', 'gpu_tablet_3'];\n      case 'phone':\n        return ['gpu_phone_1', 'gpu_phone_2', 'gpu_phone_3'];\n      default:\n        return [];\n    }\n  }\n}\nTechnologyService.ɵfac = function TechnologyService_Factory(t) {\n  return new (t || TechnologyService)();\n};\nTechnologyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TechnologyService,\n  factory: TechnologyService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,iBAAiB;EAE5BC,eAAe;EAEf,IAAIC,eAAe;IACjB,OAAO,CACL,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,OAAO,CACR;EACH;EAEA,IAAIC,aAAa;IACf,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EACnC;EAEA,IAAIC,eAAe;IACjB,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;EACzC;EAEAC,sBAAsB,CAACC,IAAY;IACjC,QAAQA,IAAI;MACV,KAAK,SAAS;QACZ,OAAO,CACL,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,CACxB;MACH,KAAK,QAAQ;QACX,OAAO,CACL,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,CACvB;MACH,KAAK,QAAQ;QACX,OAAO,CACL,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,CACvB;MACH,KAAK,OAAO;QACV,OAAO,CACL,qBAAqB,EACrB,qBAAqB,EACrB,qBAAqB,CACtB;MACH;QACE,OAAO,EAAE;IAAC;EAEhB;EAEAC,aAAa,CAACD,IAAY;IACxB,QAAQA,IAAI;MACV,KAAK,SAAS;QACZ,OAAO,CACL,eAAe,EACf,eAAe,EACf,eAAe,CAChB;MACH,KAAK,QAAQ;QACX,OAAO,CACL,cAAc,EACd,cAAc,EACd,cAAc,CACf;MACH,KAAK,QAAQ;QACX,OAAO,CACL,cAAc,EACd,cAAc,EACd,cAAc,CACf;MACH,KAAK,OAAO;QACV,OAAO,CACL,aAAa,EACb,aAAa,EACb,aAAa,CACd;MACH;QACE,OAAO,EAAE;IAAC;EAEhB;;AAjFWN,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAQ,SAAjBR,iBAAiB;EAAAS,YAFhB;AAAM","names":["TechnologyService","constructor","technologyTypes","technologyRAM","technologyCores","technologyMotherboards","type","technologyGPU","factory","providedIn"],"sourceRoot":"","sources":["/Users/marchel0925/development/VSCodeProjects/autentica-practical-frontend/src/app/service/technology/technology.service.ts"],"sourcesContent":["import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnologyService {\n\n  constructor() {}\n\n  get technologyTypes() : Array<string> {\n    return [\n      'desktop',\n      'laptop',\n      'tablet',\n      'phone',\n    ];\n  }\n\n  get technologyRAM() : Array<number> {\n    return [2, 4, 8, 16, 32, 64, 128];\n  }\n\n  get technologyCores() : Array<number> {\n    return [1, 2, 4, 6, 8, 16, 32, 64, 128];\n  }\n\n  technologyMotherboards(type: string) : Array<string> {\n    switch (type) {\n      case 'desktop':\n        return [\n          'motherboard_desktop_1',\n          'motherboard_desktop_2',\n          'motherboard_desktop_3',\n        ];\n      case 'laptop':\n        return [\n          'motherboard_laptop_1',\n          'motherboard_laptop_2',\n          'motherboard_laptop_3',\n        ];\n      case 'tablet':\n        return [\n          'motherboard_tablet_1',\n          'motherboard_tablet_2',\n          'motherboard_tablet_3',\n        ];\n      case 'phone':\n        return [\n          'motherboard_phone_1',\n          'motherboard_phone_2',\n          'motherboard_phone_3',\n        ];\n      default:\n        return [];\n    }\n  }\n\n  technologyGPU(type: string) : Array<string> {\n    switch (type) {\n      case 'desktop':\n        return [\n          'gpu_desktop_1',\n          'gpu_desktop_2',\n          'gpu_desktop_3',\n        ];\n      case 'laptop':\n        return [\n          'gpu_laptop_1',\n          'gpu_laptop_2',\n          'gpu_laptop_3',\n        ];\n      case 'tablet':\n        return [\n          'gpu_tablet_1',\n          'gpu_tablet_2',\n          'gpu_tablet_3',\n        ];\n      case 'phone':\n        return [\n          'gpu_phone_1',\n          'gpu_phone_2',\n          'gpu_phone_3',\n        ];\n      default:\n        return [];\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}